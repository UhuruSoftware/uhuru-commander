#!/bin/bash

function get_yaml()
{
# gets a value from a yaml document
cat <<EOF | ruby
require 'yaml'
f = "$appdir/$1/manifest.yml"
log = File.open( f )
yp = YAML::load_documents( log ) { |doc|
  puts "#{doc['applications']['.']['runtime']}"
}
EOF
}

function get_yaml1()
{
# gets an app's framework from the yml file
cat <<EOF | ruby
require 'yaml'
f = "$appdir/$1/manifest.yml"
log = File.open( f )
yp = YAML::load_documents( log ) { |doc|
  puts "#{doc['applications']['.']['framework']['name']}"
}
EOF
}

function trim()
{
  echo $*|tr -d ' '
  #sed 's/^ *//g'
}

function random_string()
{
  cat /dev/urandom|tr -dc "A-Za-z0-9"|fold -w $1|head -n 1
}

function random_hex_string()
{
  cat /dev/urandom|tr -dc "a-f0-9"|fold -w $1|head -n 1
}

function random_guid()
{
  echo "`random_hex_string 8`-`random_hex_string 4`-`random_hex_string 4`-`random_hex_string 4`-`random_hex_string 12`"
}

function validate_ip()
{
  local ret=1

  case "$*" in
    ""|*[!0-9.]*|*[!0-9]) return 1 ;;
  esac

  local IFS=.
  set -- $*

  [ $# -eq 4 ] && [ ${1:-300} -le 255 ] && [ ${2:-300} -le 255 ] && [ ${3:-300} -le 255 ] && [ ${4:-300} -le 255 ] && ret=0

  [ $ret -ne 0 ] && msgbox "Invalid IP" "This is not a valid IP address."

  return $ret
}

function validate_subnet()
{
  local ret=1

  case "$*" in
    ""|*[!0-9.]*|*[!0-9]) return 1 ;;
  esac

  local IFS=.
  set -- $*

  [ $# -eq 4 ] && [ ${1:-300} -le 255 ] && [ ${2:-300} -le 255 ] && [ ${3:-300} -eq 0 ] && [ ${4:-300} -eq 0 ] && ret=0

  [ $ret -ne 0 ] && msgbox "Invalid subnet" "Please enter a subnet which ends with '.0.0'"

  return $ret
}

function add_to_ip()
{
  local add=$2 IFS=.
  set -- $1
  echo "$1.$2.$3.$(( $4 + $add ))"
}

function infobox()
{
  local msg title
  [ $# -eq 1 ] &&
    {
    title="Information"
    msg=$1
    } ||
    {
    title=$1
    msg=$2
    }

  $dialog --backtitle "$bgtitle" --title " $title " --infobox "\n${msg}\n\n" 0 0
}

function yesno()
{
  local msg title
  [ $# -eq 1 ] &&
    {
    title="Question"
    msg=$1
    } ||
    {
    title=$1
    msg=$2
    }

  $dialog --backtitle "$bgtitle" --title " $title " --yesno "\n${msg}\n\n" 0 0
}

function msgbox()
{
  local msg title
  [ $# -eq 1 ] &&
    {
    title="Message"
    msg=$1
    } ||
    {
    title=$1
    msg=$2
    }

  $dialog --backtitle "$bgtitle" --title " $title " --msgbox "\n${msg}\n\n" 0 0
}

function textbox()
{
  lines=`tput lines`
  cols=`tput cols`

  $dialog --backtitle "$bgtitle" --title " $1 " --textbox $2 $(( $lines - 4 )) $(( $cols - 6 ))
}

function inputbox()
{
  local msg title default
  [ $# -eq 1 ] &&
    {
    title="Input text"
    msg=$1
    default=""
    } ||
    {
    title=$1
    msg=$2
    default=$3
    }

  $dialog --backtitle "$bgtitle" --title " $title " --inputbox "\n${msg}\n\n" 0 0 "$default" 2>$tmpdir/input.out
}

function passwordbox()
{
  local pass

  $dialog --backtitle "$bgtitle" --title " $1 " --insecure --passwordbox "\nPlease enter password\n\n" 0 0 2>$tmpdir/password.out &&
    {
    pass=`cat $tmpdir/password.out`
    $dialog --backtitle "$bgtitle" --title " $1 " --insecure --passwordbox "\nEnter password again\n\n" 0 0 2>$tmpdir/password.out

    [ "`cat $tmpdir/password.out`" != "$pass" ] &&
      {
      msgbox "The passwords don't match"
      return 1
      } ||
      {
      return 0
      }
    } || return 1
}

function edit_file()
{
  $dialog --backtitle "$bgtitle" \
  --ok-label "Save" \
  --title " Edit `basename $1` " \
  --editbox $1 0 0 \
  2>$tmpdir/edit.out && cp -f $tmpdir/edit.out $1

  rm -f $tmpdir/edit.out
}

function cleanup()
{
  rm -rf $tmpdir
  reset
}

function write_vars()
{
cat <<EOFghj >$1
conf_cloud_name="$conf_cloud_name"
cloudfoundry_domain="$cloudfoundry_domain"
conf_network=$conf_network

bosh_pool_small_size=$bosh_pool_small_size
bosh_pool_small_ram=$bosh_pool_small_ram
bosh_pool_small_disk=$bosh_pool_small_disk
bosh_pool_small_cpu=$bosh_pool_small_cpu

bosh_pool_medium_size=$bosh_pool_medium_size
bosh_pool_medium_extra_size=$bosh_pool_medium_extra_size
bosh_pool_medium_ram=$bosh_pool_medium_ram
bosh_pool_medium_disk=$bosh_pool_medium_disk
bosh_pool_medium_extra_disk=$bosh_pool_medium_extra_disk
bosh_pool_medium_cpu=$bosh_pool_medium_cpu

bosh_pool_large_size=$bosh_pool_large_size
bosh_pool_large_ram=$bosh_pool_large_ram
bosh_pool_large_disk=$bosh_pool_large_disk
bosh_pool_large_cpu=$bosh_pool_large_cpu

conf_bosh_blobstore_ip=$conf_bosh_blobstore_ip
conf_bosh_nats_ip=$conf_bosh_nats_ip
conf_bosh_postgres_ip=$conf_bosh_postgres_ip
conf_bosh_redis_ip=$conf_bosh_redis_ip
conf_bosh_director_ip=$conf_bosh_director_ip

conf_datacenter_vmfolder="$conf_datacenter_vmfolder"
conf_datacenter_micro_diskpath="$conf_datacenter_micro_diskpath"
conf_datacenter_deployer_diskpath="$conf_datacenter_deployer_diskpath"
conf_datacenter_bosh_diskpath="$conf_datacenter_bosh_diskpath"
conf_datacenter_name=$conf_datacenter_name
conf_datacenter_templatefolder=$conf_datacenter_templatefolder
conf_datacenter_datastorepattern=$conf_datacenter_datastorepattern
conf_datacenter_persistentpattern=$conf_datacenter_persistentpattern
conf_datacenter_mixeddatastores=$conf_datacenter_mixeddatastores

cloudfoundry_compilation_ram=$cloudfoundry_compilation_ram
cloudfoundry_compilation_disk=$cloudfoundry_compilation_disk
cloudfoundry_compilation_cpu=$cloudfoundry_compilation_cpu

conf_bosh_reserved_start=$conf_bosh_reserved_start
conf_bosh_reserved_stop=$conf_bosh_reserved_stop
conf_bosh_static_start=$conf_bosh_static_start
conf_bosh_static_stop=$conf_bosh_static_stop
conf_bosh_range=$conf_bosh_range

conf_network_gateway=$conf_network_gateway
conf_network_dns1=$conf_network_dns1
conf_network_dns2=$conf_network_dns2

cloudfoundry_pool_tiny_size=$cloudfoundry_pool_tiny_size
cloudfoundry_pool_tiny_ram=$cloudfoundry_pool_tiny_ram
cloudfoundry_pool_tiny_disk=$cloudfoundry_pool_tiny_disk
cloudfoundry_pool_tiny_cpu=$cloudfoundry_pool_tiny_cpu
cloudfoundry_pool_tiny_password=$cloudfoundry_pool_tiny_password

cloudfoundry_pool_small_size=$cloudfoundry_pool_small_size
cloudfoundry_pool_small_ram=$cloudfoundry_pool_small_ram
cloudfoundry_pool_small_disk=$cloudfoundry_pool_small_disk
cloudfoundry_pool_small_cpu=$cloudfoundry_pool_small_cpu
cloudfoundry_pool_small_password=$cloudfoundry_pool_small_password

cloudfoundry_pool_medium_size=$cloudfoundry_pool_medium_size
cloudfoundry_pool_medium_ram=$cloudfoundry_pool_medium_ram
cloudfoundry_pool_medium_disk=$cloudfoundry_pool_medium_disk
cloudfoundry_pool_medium_cpu=$cloudfoundry_pool_medium_cpu
cloudfoundry_pool_medium_password=$cloudfoundry_pool_medium_password

cloudfoundry_pool_large_size=$cloudfoundry_pool_large_size
cloudfoundry_pool_large_ram=$cloudfoundry_pool_large_ram
cloudfoundry_pool_large_disk=$cloudfoundry_pool_large_disk
cloudfoundry_pool_large_cpu=$cloudfoundry_pool_large_cpu
cloudfoundry_pool_large_password=$cloudfoundry_pool_large_password

cloudfoundry_pool_deas_ram=$cloudfoundry_pool_deas_ram
cloudfoundry_pool_deas_disk=$cloudfoundry_pool_deas_disk
cloudfoundry_pool_deas_cpu=$cloudfoundry_pool_deas_cpu
cloudfoundry_pool_deas_password=$cloudfoundry_pool_deas_password

cloudfoundry_ip_router=$cloudfoundry_ip_router
cloudfoundry_ip_nats=$cloudfoundry_ip_nats

cloudfoundry_cloud_controller_count=$cloudfoundry_cloud_controller_count
cloudfoundry_stager_count=$cloudfoundry_stager_count
cloudfoundry_router_count=$cloudfoundry_router_count
cloudfoundry_deas_count=$cloudfoundry_deas_count
cloudfoundry_mysqlnode_count=$cloudfoundry_mysqlnode_count
cloudfoundry_mongodbnode_count=$cloudfoundry_mongodbnode_count
cloudfoundry_redisnode_count=$cloudfoundry_redisnode_count
cloudfoundry_rabbitnode_count=$cloudfoundry_rabbitnode_count
cloudfoundry_uhurufsnode_count=$cloudfoundry_uhurufsnode_count
cloudfoundry_postgresqlnode_count=$cloudfoundry_postgresqlnode_count
cloudfoundry_mssqlnode_count=$cloudfoundry_mssqlnode_count
cloudfoundry_windea_count=$cloudfoundry_windea_count
cloudfoundry_mssqlnode_count=$cloudfoundry_mssqlnode_count
cloudfoundry_windea_count=$cloudfoundry_windea_count
cloudfoundry_uhuru_tunnel_count=$cloudfoundry_uhuru_tunnel_count

cloudfoundry_nats_username="$cloudfoundry_nats_username"
cloudfoundry_nats_password="$cloudfoundry_nats_password"

cloudfoundry_ccdb_password="$cloudfoundry_ccdb_password"
cloudfoundry_ip_ccdb_postgres=$cloudfoundry_ip_ccdb_postgres
cloudfoundry_ccdb_dbname="$cloudfoundry_ccdb_dbname"
cloudfoundry_ccdb_ccname="$cloudfoundry_ccdb_ccname"
cloudfoundry_ccdb_roles_password="$cloudfoundry_ccdb_roles_password"

cloudfoundry_srv_api_uri="$cloudfoundry_srv_api_uri"

cloudfoundry_cc_password="$cloudfoundry_cc_password"
cloudfoundry_cc_token="$cloudfoundry_cc_token"
cloudfoundry_cc_staging_upload_user="$cloudfoundry_cc_staging_upload_user"
cloudfoundry_cc_staging_upload_password="$cloudfoundry_cc_staging_upload_password"
cloudfoundry_cc_admin="$cloudfoundry_cc_admin"

cloudfoundry_ip_vcap_redis=$cloudfoundry_ip_vcap_redis
cloudfoundry_vcap_redis_password="$cloudfoundry_vcap_redis_password"
cloudfoundry_vcap_redis_maxmemory=$cloudfoundry_vcap_redis_maxmemory

cloudfoundry_router_username="$cloudfoundry_router_username"
cloudfoundry_router_password="$cloudfoundry_router_password"

cloudfoundry_dea_maxmemory=$cloudfoundry_dea_maxmemory

cloudfoundry_ip_debian_nfs_server=$cloudfoundry_ip_debian_nfs_server
cloudfoundry_ip_hbase_master=$cloudfoundry_ip_hbase_master
cloudfoundry_ip_hbase_slave=$cloudfoundry_ip_hbase_slave
cloudfoundry_ip_opentsdb=$cloudfoundry_ip_opentsdb

cloudfoundry_mysql_gateway_token=$cloudfoundry_mysql_gateway_token
cloudfoundry_mssql_gateway_token=$cloudfoundry_mssql_gateway_token
cloudfoundry_uhurufs_gateway_token=$cloudfoundry_uhurufs_gateway_token
cloudfoundry_redis_gateway_token=$cloudfoundry_redis_gateway_token
cloudfoundry_mongodb_gateway_token=$cloudfoundry_mongodb_gateway_token
cloudfoundry_rabbit_gateway_token=$cloudfoundry_rabbit_gateway_token
cloudfoundry_postgresql_gateway_token=$cloudfoundry_postgresql_gateway_token

cloudfoundry_ip_syslog_aggregator=$cloudfoundry_ip_syslog_aggregator
cloudfoundry_ip_uaadb=$cloudfoundry_ip_uaadb
cloudfoundry_ip_simple_webui=$cloudfoundry_ip_simple_webui

cloudfoundry_uaadb_password=$cloudfoundry_uaadb_password
cloudfoundry_uaa_cc_token_secret=$cloudfoundry_uaa_cc_token_secret
cloudfoundry_uaa_cc_client_secret=$cloudfoundry_uaa_cc_client_secret
cloudfoundry_uaa_admin_client_secret=$cloudfoundry_uaa_admin_client_secret
cloudfoundry_uaa_login_client_secret=$cloudfoundry_uaa_login_client_secret
cloudfoundry_uaa_dashboard_secret=$cloudfoundry_uaa_dashboard_secret

cloudfoundry_dash_username=$cloudfoundry_dash_username
cloudfoundry_dash_password=$cloudfoundry_dash_password
cloudfoundry_dash_email=$cloudfoundry_dash_email

conf_network_micro_ip=$conf_network_micro_ip
conf_network_netmask=$conf_network_netmask

conf_resources_persistent=$conf_resources_persistent
conf_resources_ram=$conf_resources_ram
conf_resources_disk=$conf_resources_disk
conf_resources_cpu=$conf_resources_cpu

conf_network_ntp1=$conf_network_ntp1
conf_network_ntp2=$conf_network_ntp2

conf_vcenter_host=$conf_vcenter_host
conf_vcenter_user=$conf_vcenter_user
conf_vcenter_password=$conf_vcenter_password
conf_vcenter_clustername="$conf_vcenter_clustername"

version_bosh_cli=$version_bosh_cli
version_bosh=$version_bosh
version_cloudfoundry=$version_cloudfoundry

conf_uhuru_port="$conf_uhuru_port"
conf_uhuru_cloud_name="$conf_uhuru_cloud_name"
conf_uhuru_recaptcha_public_key="$conf_uhuru_recaptcha_public_key"
conf_uhuru_recaptcha_private_key="$conf_uhuru_recaptcha_private_key"
conf_uhuru_activation_link_secret="$conf_uhuru_activation_link_secret"
conf_uhuru_email_from="$conf_uhuru_email_from"
conf_uhuru_email_from_alias="$conf_uhuru_email_from_alias"
conf_uhuru_contact_email="$conf_uhuru_contact_email"
conf_uhuru_admin_email="$conf_uhuru_admin_email"
conf_uhuru_admin_password="$conf_uhuru_admin_password"
conf_uhuru_default_random_password="$conf_uhuru_default_random_password"

conf_uhuru_smtp_server=$conf_uhuru_smtp_server
conf_uhuru_smtp_port="$conf_uhuru_smtp_port"
conf_uhuru_smtp_user="$conf_uhuru_smtp_user"
conf_uhuru_smtp_password="$conf_uhuru_smtp_password"
conf_uhuru_smtp_tls=$conf_uhuru_smtp_tls
conf_uhuru_email_authentication=$conf_uhuru_email_authentication

conf_uhuru_company_name="$conf_uhuru_company_name"
conf_uhuru_company_address="$conf_uhuru_company_address"
conf_uhuru_company_phone="$conf_uhuru_company_phone"
conf_uhuru_support_address="$conf_uhuru_support_address"
conf_uhuru_description="$conf_uhuru_description"

cloudfoundry_windows_product_key="$cloudfoundry_windows_product_key"
cloudfoundry_sqlserver_product_key="$cloudfoundry_sqlserver_product_key"
EOFghj
}


function save_conf()
{
  [ ! -d $pwd/.uhuru-deployments/$deployment/deployments/micro_bosh ] && mkdir -p $pwd/.uhuru-deployments/$deployment/deployments/micro_bosh
  [ ! -d $pwd/.uhuru-deployments/$deployment/deployments/bosh ] && mkdir -p $pwd/.uhuru-deployments/$deployment/deployments/bosh
  [ ! -d $pwd/.uhuru-deployments/$deployment/deployments/cloudfoundry ] && mkdir -p $pwd/.uhuru-deployments/$deployment/deployments/cloudfoundry

  [ "$conf_datacenter_datastorepattern" == "$conf_datacenter_persistentpattern" ] && conf_datacenter_mixeddatastores="true" || conf_datacenter_mixeddatastores="false"

  write_bosh_conf $pwd/.uhuru-deployments/$deployment/deployments/bosh/bosh.yml
  write_cloudfoundry_conf $pwd/.uhuru-deployments/$deployment/deployments/cloudfoundry/cloudfoundry.yml
  write_micro_conf $pwd/.uhuru-deployments/$deployment/deployments/micro_bosh/micro_bosh.yml

  write_vars $pwd/.uhuru-deployments/$deployment/${deployment}.conf

  [ ! -d $pwd/.uhuru-deployments/$deployment/plans ] && mkdir -p $pwd/.uhuru-deployments/$deployment/plans
  cp -f $tmpdir/*_plan $pwd/.uhuru-deployments/$deployment/plans/
}
